{"version":3,"sources":["./src/environments/environment.ts","./src/app/state.enum.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/meter/meter.component.ts","./src/app/meter/meter.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum State {\n    Resting,\n    Heating,\n    Apoplectic,\n    Cooling\n}\n","import { Component } from '@angular/core';\nimport { State } from './state.enum';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor() {\n    this.state = State.Resting;\n    setInterval(() => {\n      this.decay();\n      this.updateState();\n    }, 250);\n  }\n\n  public state: State;\n  public stateClass(): string {\n    return `state-${State[this.state].toLowerCase()}`;\n  }\n  private elapsedMs: number = 1000;\n\n  decay() {\n    this.elapsedMs += 250;\n    const af = this.annoyanceFactor;\n    if (af == 0) return;\n\n    if (af > 0) this.annoyanceFactor -= 7;\n    else this.annoyanceFactor = 0;\n    return;\n  }\n\n  updateState() {\n    let newState: State;\n    if (this.annoyanceFactor <= 0) newState = State.Resting;\n    else if (this.annoyanceFactor >= 100) newState = State.Apoplectic;\n    else if (this.elapsedMs > 250) newState = State.Cooling;\n    else newState = State.Heating;\n\n    if (newState !== this.state)\n    {\n      console.log(State[newState]);\n      this.state = newState;\n\n    }\n  }\n\n  annoyanceFactor = 0;\n  poke() {\n    this.annoyanceFactor += 9;\n    this.elapsedMs = 0;\n  }\n}\n","<div class=\"container\">\n    <div id=\"face\" class=\"{{stateClass()}}\" (click)=\"poke()\" ></div>\n\n    <app-meter [progress]=annoyanceFactor></app-meter>\n    <!-- <button class=\"btn\"  (click)=\"poke()\">Poke</button> -->\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { MeterComponent } from './meter/meter.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MeterComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-meter',\n  templateUrl: './meter.component.html',\n  styleUrls: ['./meter.component.scss'],\n})\nexport class MeterComponent implements OnInit {\n  ngOnInit(): void {}\n\n  /** Inputs **/\n  @Input('progress') progress: number;\n  @Input('label') label: string;\n\n  constructor() {\n    // Default color\n    this.progress = 0;\n    this.label = '';\n\n    // setInterval(()=>{ this.progress += 1}, 200);\n\n  }\n  backgroundCss(): string {\n    const s = `-webkit-linear-gradient(bottom, #db3f02 0%, #db3f02 ${this.progress}%, \n      #fff ${this.progress}%, #fff 100%)`;\n      return s;\n  }\n}\n","<div class=\"container\">\n    <span class=\"meter\" [ngStyle]=\"{background: backgroundCss()}\">{{label}}</span>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}